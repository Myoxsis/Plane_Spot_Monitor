import { PrismaClient } from '@prisma/client';import fs from 'node:fs';import path from 'node:path';const prisma=new PrismaClient();const airportsPath=path.join(process.cwd(),'data','airports.json');const rulesPath=path.join(process.cwd(),'data','rules.default.json');async function main(){const airports=JSON.parse(fs.readFileSync(airportsPath,'utf-8'));for(const a of airports){await prisma.airport.upsert({where:{iata:a.iata},update:a,create:a});}const existing=await prisma.rulePack.findFirst({where:{active:true}});if(!existing){const rules=JSON.parse(fs.readFileSync(rulesPath,'utf-8'));await prisma.rulePack.create({data:{version:1,active:true,content:JSON.stringify(rules)}});}console.log('Seeded',airports.length,'airports and default rule pack.')}main().finally(()=>prisma.$disconnect());
