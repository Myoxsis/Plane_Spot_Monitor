import { prisma } from './db';export type RuleContent={lookbackDays:number;weights:{specialLivery:number;rareModelGlobal:number;rareAtAirport:number;firstTimeHere:number;unusualRoute:number};thresholds:{exceptional:number;notable:number;unusualRouteMaxCount:number};special_livery_keywords:string[];rare_models_global:string[];rare_models_by_airport:Record<string,string[]>;rare_airlines_by_airport:Record<string,string[]>;special_registrations:Record<string,string[]>;};export async function getActiveRules(){const pack=await prisma.rulePack.findFirst({where:{active:true},orderBy:{version:'desc'}});if(!pack) throw new Error('No active rule pack');const parsed=typeof pack.content==='string'?JSON.parse(pack.content as any):(pack.content as any);return parsed as RuleContent}export async function setRules(content:RuleContent){const last=await prisma.rulePack.findFirst({orderBy:{version:'desc'}});const version=(last?.version??0)+1;await prisma.rulePack.updateMany({where:{active:true},data:{active:false}});await prisma.rulePack.create({data:{version,active:true,content:JSON.stringify(content)}});return version}
