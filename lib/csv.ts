import { parse } from 'csv-parse/sync';export type CsvRow={airport:string;flight_direction:string;extract_time:string;model_code?:string;model_text?:string;registration:string;owner?:string;airline?:string;origin_code?:string;origin_name?:string;destination_code?:string;destination_name?:string;'Livery Info'?:string;scheduled_departure?:string;scheduled_arrival?:string;real_departure?:string;real_arrival?:string;};function normalizeHeader(h:string){return h.trim().replace(/\s+/g,'_').replace(/[^a-zA-Z0-9_]/g,'').toLowerCase()}export function parseCsv(buf:Buffer):CsvRow[]{const text=buf.toString('utf-8');const delims=[',',';','\t'];let best:any[]|null=null;let bestCols=0;for(const d of delims){try{const recs=parse(text,{columns:(hdrs:string[])=>hdrs.map(normalizeHeader),delimiter:d,skip_empty_lines:true,relax_column_count:true,trim:true}) as any[];const cols=recs.length?Object.keys(recs[0]).length:0;if(cols>=bestCols){best=recs;bestCols=cols}}catch{}}const records=(best??parse(text,{columns:true,skip_empty_lines:true,relax_column_count:true,trim:true})) as any[];return records.map((rec:any)=>({airport:rec.airport??rec.iata??rec.airport_code,flight_direction:rec.flight_direction??rec.direction,extract_time:rec.extract_time??rec.timestamp??rec.extracttime,model_code:rec.model_code??rec.model??rec.type_code,model_text:rec.model_text??rec.type??rec.aircraft,registration:rec.registration??rec.reg??rec.tail??rec.tail_number,owner:rec.owner??rec.operator,airline:rec.airline??rec.carrier,origin_code:rec.origin_code??rec.origin??rec.orig??rec.from,origin_name:rec.origin_name??rec.originname,destination_code:rec.destination_code??rec.destination??rec.dest??rec.to,destination_name:rec.destination_name??rec.destinationname,'Livery Info':rec['livery_info']??rec['livery']??rec['Livery Info']??rec['special_livery'],scheduled_departure:rec.scheduled_departure??rec.sched_dep??rec.std??rec.scheduleddeparture,scheduled_arrival:rec.scheduled_arrival??rec.sched_arr??rec.sta??rec.scheduledarrival,real_departure:rec.real_departure??rec.actual_departure??rec.atd??rec.offblock??rec.departuretime,real_arrival:rec.real_arrival??rec.actual_arrival??rec.ata??rec.onblock??rec.arrivaltime}))}
