import { DateTime } from 'luxon';import { prisma } from './db';export function cleanStr(v:any){if(v===undefined||v===null) return null;const s=String(v).trim();if(!s||/^(N\/A|NaN|NULL|null|undefined)$/i.test(s)) return null;return s}export async function airportTimezone(iata:string){const a=await prisma.airport.findUnique({where:{iata}});if(!a) throw new Error(`Unknown airport ${iata}`);return a.timezone}export function roundToMinute(dt:Date){const d=new Date(dt);d.setSeconds(0,0);return d}export function parseWithTz(local:string,tz:string){let fmt='yyyy-LL-dd HH:mm:ss';let s=local.trim();if(s.includes('T')) fmt=s.length>=19?'yyyy-LL-dd\'T\'HH:mm:ss':'yyyy-LL-dd\'T\'HH:mm';if(/^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}$/.test(s)) fmt='yyyy-LL-dd HH:mm';const dt=DateTime.fromFormat(s,fmt,{zone:tz});if(!dt.isValid){const iso=DateTime.fromISO(s,{zone:tz});if(!iso.isValid) throw new Error('Invalid date: '+local);return iso.toUTC().toJSDate()}return dt.toUTC().toJSDate()}
